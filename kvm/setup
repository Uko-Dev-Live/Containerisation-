Virtualization is one of the great deal of advancements over the several decades in the IT space, that has immensely revolutionized the technology industry. Under the technology of virtualization, Linux kernel has advanced such that virtualization is built into it (especially the Ubuntu distribution of the Linux Operating System). Therefore, it takes only some installation of dependency packages to setup virtual machine. 

What we want to do here is to coherently outline the steps taken to setup this awesome technology (virtualization) that has changed the way data centers are operated and maintained. 

Kernel-based Virtual Machine (KVM) setup

This tutorial would be carried out only on a Ubuntu Linux System and only one method would be followed.

We want to skip the system configuration specification requirements and rather would move forward to checking if the system supports virtualization or not. 

To check if your intended Linux system supports virtualization, run the following command:
egrep -c ‘(vmx | svm) ‘ /proc/cpuinfo

If the output is 0, then the system doesn’t support virtualization while output of 1 or more value means it supports virtualization. 

In the hindsight, you could enable virtualization extension by booting into the system BIOS in-case this feature was disabled as usually the case with systems by manufacturer. 


# chown root:kvm /vm_storage

# chmod  775 /vm_storage

# usermod -aG kvm [user]

# apt install bridge-utils qemu-kvm qemu-system libvirt-daemon-system

# systemctl status libvirtd.service

It is advised to duplicate this configuration file while we make some changes to the original file.

Search for the following line:
unix_sock_group = “libvirtd”

Change the above line to this:
unix_sock_group = “kvm”  

This is the group that was added previously.

Search for the following line and change also:
unix_sock_ro_perms = “0777”

Change the line above to the following:
unix_sock_perms = “0770”
